Parameters:


Resources:

  #Role for lambda function that triggers step function
  LambdaTriggerStepFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "inline-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              -
                Effect: "Allow"
                Action:
                  - states:StartExecution
                Resource: "*"


  #Lambda function that can trigger Step Functions
  LambdaTriggerStepFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        ZipFile: |
          import json
          def handler(event, context):
            print(json.dumps(event))
            return {}
      Description: triggers step function in response to s3 object put
      FunctionName:
        !Sub ${AWS::StackName}_TriggerStepFunction
      Handler: index.handler
      MemorySize: 128
      Role:
        !GetAtt LambdaTriggerStepFunctionRole.Arn
      Runtime: python2.7
      Timeout: 300
      Environment:
        Variables:
          state_machine: !Ref StateMachine
          animate_radar_ids: !Ref AnimateRadarIDs


  #The role that the state machine uses
  StateMachineRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - !Sub "states.${AWS::Region}.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "inline-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - lambda:InvokeFunction
                Resource: "*"

  #The State machine itself
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString: !Sub |-
        {
          "Comment": "A Hello World example of the Amazon States Language using a Pass state",
          "StartAt": "HelloWorld",
          "States": {
            "HelloWorld": {
              "Type": "Pass",
              "Result": "Hello World!",
              "End": true
            }
          }
        }
      RoleArn: !GetAtt StateMachineRole.Arn

  #Example of an activity e.g. an EC2-based activity
  StepFunctionActivityAnimate:
    Type: "AWS::StepFunctions::Activity"
    Properties:
      Name: !Sub ${AWS::StackName}_Animate


Outputs:
  AnimateActivityARN:
    Value: !Ref StepFunctionActivityAnimate
    Export:
      Name: AnimateActivityARN
