
Parameters:
  S3ResourceBucket:
    Type: String
    Description: S3 bucket that contains lambda deployment packages and other data

  S3PublicBucket:
    Type: String
    Description: s3 website-enabled bucket (this will be created - must be unique)



Resources:

  LambdageneratePresignPOSTRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "inline-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              -
                Effect: "Allow"
                Action:
                  - s3:PutObject
                Resource:
                  !Join [ "", [ "arn:aws:s3:::", !Ref S3ResourceBucket, "/*"  ] ]

  LambdageneratePresignPOST:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref S3ResourceBucket
        S3Key: apps/s3-presign/generatePresignPOST.zip
      Description: account entity CRUD
      FunctionName:
        !Join [ "_", [ !Ref "AWS::StackName", generatePresignPOST ] ]
      Handler: app.handler
      MemorySize: 128
      Role:
        !GetAtt LambdageneratePresignPOSTRole.Arn
      Runtime: python2.7
      Timeout: 30
      Environment:
        Variables:
          s3_bucket: !Ref S3ResourceBucket


  S3UploaderWebsiteBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName:
        !Ref S3PublicBucket
      WebsiteConfiguration:
        IndexDocument: index.html
      CorsConfiguration:
        CorsRules:
          -
            AllowedMethods: [POST]
            AllowedOrigins: ['*']


  S3UploaderWebsitePolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref S3UploaderWebsiteBucket
      PolicyDocument:
        Statement:
          -
            Action:
              - s3:GetObject
            Effect: "Allow"
            Resource:
              !Join [ "", [ "arn:aws:s3:::", !Ref S3PublicBucket, "/public/*"  ] ]
            Principal: "*"
